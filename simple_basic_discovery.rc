<ruby>
# Author of real Basic_discovery: m-1-k-3 (Web: http://www.s3cur1ty.de / Twitter: @s3cur1ty_de)
# This is a version of the resource Basic_discovery created to use with the resource AutoHackBruteOs by the author of AutoHackBruteOs

versionscanners = 1	

if (framework.datastore['VERBOSE'] != nil) 
	verbose = framework.datastore['VERBOSE']
	$verbose = framework.datastore['VERBOSE']
else
	verbose = 1
	$verbose = 1
end

def infos(serv,host)
	print_line("")
	print_line("====================================")
	print_line("IP: #{host.address}")
	print_line("OS: #{host.os_name}")
	print_line("Servicename: #{serv.name}")
	print_line("Service Port: #{serv.port.to_i}")
	print_line("Service Protocol: #{serv.proto}")
	print_line("====================================")
	print_line("")
end

maxjobs = 8	
def jobwaiting(maxjobs)
	while(framework.jobs.keys.length >= maxjobs)
		::IO.select(nil, nil, nil, 2.5)
		print_error("waiting for finishing some modules... active jobs: #{framework.jobs.keys.length} / threads: #{framework.threads.length}")
		framework.jobs.keys.each do |id_job|
			puts("#{framework.jobs[id_job].name}")
		end
	end
end

framework.db.workspace.hosts.each do |host|
	host.services.each do |serv|
		next if not serv.host
		next if (serv.state != Msf::ServiceState::Open)
		#next if (serv.name =~ /smb/ or serv.name =~ /microsoft-ds/ or serv.name =~ /netbios/ or serv.port == 445 or serv.port == 139 or serv.port == 137 or serv.name =~ /smtp/ or serv.port == 25 or serv.name =~ /snmp/ or serv.port == 161 or serv.name =~ /ssh/ or serv.port == 22 or serv.name =~ /telnet/ or serv.port == 23)
		if (serv.name =~ /smb/ or serv.name =~ /microsoft-ds/ or serv.name =~ /netbios/ or serv.port == 445 or serv.port == 139 or serv.port == 137)
			if(serv.port == 445)
				if(versionscanners == 1 or serv.name == nil)
					print_line("Module: smb-version")
					run_single("use auxiliary/scanner/smb/smb_version")
					if(verbose == 1)
						infos(serv,host)
					end
					run_single("set RHOSTS #{host.address}")
					if(verbose == 1)
						run_single("set VERBOSE true")
						run_single("run -j")
					else
						run_single("run -j -q")
					end
					jobwaiting(maxjobs)
				end
			end

			print_line("Module: smb2")
			run_single("use auxiliary/scanner/smb/smb2")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: nbname")
			run_single("use auxiliary/scanner/netbios/nbname")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: smb_enumshares")
			run_single("use auxiliary/scanner/smb/smb_enumshares")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: smb_enumusers")
			run_single("use auxiliary/scanner/smb/smb_enumusers")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: smb_enumusers_domain")
			run_single("use auxiliary/scanner/smb/smb_enumusers_domain")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: smb_lookupsid")
			run_single("use auxiliary/scanner/smb/smb_lookupsid")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /smtp/ or serv.port == 25)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: smtp_version")
				run_single("use auxiliary/scanner/smtp/smtp_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end

			print_line("Module: smtp_enum")
			run_single("use auxiliary/scanner/smtp/smtp_enum")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /snmp/ or serv.port == 161)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: aix_version")
				run_single("use auxiliary/scanner/snmp/aix_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end

			print_line("Module: snmp_enumshares")
			run_single("use auxiliary/scanner/snmp/snmp_enumshares")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: snmp_enumusers")
			run_single("use auxiliary/scanner/snmp/snmp_enumusers")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: snmp_enum")
			run_single("use auxiliary/scanner/snmp/snmp_enum")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /ssh/ or serv.port == 22)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: ssh_version")
				run_single("use auxiliary/scanner/ssh/ssh_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end
		end

		if (serv.name =~ /telnet/ or serv.port == 23)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: telnet_version")
				run_single("use auxiliary/scanner/telnet/telnet_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end

			print_line("Module: telnet_encrypt_overflow")
			run_single("use auxiliary/scanner/telnet/telnet_encrypt_overflow")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /imap/ or serv.port == 143)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: imap_version")
				run_single("use auxiliary/scanner/imap/imap_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end
		end

		if (serv.name =~ /pop3/ or serv.port == 110)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: pop3_version")
				run_single("use auxiliary/scanner/pop3/pop3_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end
		end

		if (serv.name =~ /http/ or serv.port == 80 or serv.port == 443)

			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: http_version")
				run_single("use auxiliary/scanner/http/http_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if (serv.name =~ /https/ or serv.port == 443)
					run_single("set SSL true")
				else
					run_single("set SSL false")
				end
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end

			print_line("Module: open_proxy")
			run_single("use auxiliary/scanner/http/open_proxy")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if (serv.name =~ /https/)
				run_single("set SSL true")
			else
				run_single("set SSL false")
			end
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: svn_scanner")
			run_single("use auxiliary/scanner/http/svn_scanner")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if (serv.name =~ /https/)
				run_single("set SSL true")
			else
				run_single("set SSL false")
			end
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: webdav_scanner")
			run_single("use auxiliary/scanner/http/webdav_scanner")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if (serv.name =~ /https/)
				run_single("set SSL true")
			else
				run_single("set SSL false")
			end
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: http_put")
			run_single("use auxiliary/scanner/http/http_put")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if (serv.name =~ /https/)
				run_single("set SSL true")
			else
				run_single("set SSL false")
			end
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: cisco_device_manager")
			run_single("use auxiliary/scanner/http/cisco_device_manager")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if (serv.name =~ /https/)
				run_single("set SSL true")
			else
				run_single("set SSL false")
			end
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
			print_line("Module: cisco_ios_auth_bypass")
			run_single("use auxiliary/scanner/http/cisco_ios_auth_bypass")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if (serv.name =~ /https/)
				run_single("set SSL true")
			else
				run_single("set SSL false")
			end
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: vmware_server_dir_trav")
			run_single("use auxiliary/scanner/vmware/vmware_server_dir_trav")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if (serv.name =~ /https/)
				run_single("set SSL true")
			else
				run_single("set SSL false")
			end
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /ftp/ or serv.port == 21)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: ftp_version")
				run_single("use auxiliary/scanner/ftp/ftp_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end

			print_line("Module: ftp-anonymous")
			run_single("use auxiliary/scanner/ftp/anonymous")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)

			print_line("Module: titanftp_xcrc_traversal")
			run_single("use auxiliary/admin/ftp/titanftp_xcrc_traversal")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOST #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /mssql/ or serv.name =~ /ms-sql/ or serv.port == 1434 or serv.port == 1433)
			print_line("Module: mssql_ping")
			run_single("use auxiliary/scanner/mssql/mssql_ping")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /postgre/ or serv.port == 5432)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: postgres_version")
				run_single("use auxiliary/scanner/postgres/postgres_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end
		end

		if (serv.name =~ /mysql/ or serv.port == 3306)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: mysql_version")
				run_single("use auxiliary/scanner/mysql/mysql_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end
		end
		if (serv.name =~ /oracle/ or serv.port == 1521)
			if(versionscanners == 1 or serv.name == nil)
				print_line("Module: tnslsnr_version")
				run_single("use auxiliary/scanner/oracle/tnslsnr_version")
				if(verbose == 1)
					infos(serv,host)
				end
				run_single("set RPORT #{serv.port}")
				run_single("set RHOSTS #{host.address}")
				if(verbose == 1)
					run_single("set VERBOSE true")
					run_single("run -j")
				else
					run_single("run -j -q")
				end
				jobwaiting(maxjobs)
			end
		end

		if (serv.port == 7777)
			print_line("Module: energizer_duo_detect")
			run_single("use auxiliary/scanner/backdoor/energizer_duo_detect")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end

		if (serv.name =~ /vnc/ or serv.port == 5900)
			print_line("Module: vnc_none_auth")
			run_single("use auxiliary/scanner/vnc/vnc_none_auth")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end
		if (serv.port == 6000)
			print_line("Module: open_x11")
			run_single("use auxiliary/scanner/x11/open_x11")
			if(verbose == 1)
				infos(serv,host)
			end
			run_single("set RPORT #{serv.port}")
			run_single("set RHOSTS #{host.address}")
			if(verbose == 1)
				run_single("set VERBOSE true")
				run_single("run -j")
			else
				run_single("run -j -q")
			end
			jobwaiting(maxjobs)
		end
	end
	run_single("back")
end
</ruby>
